<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
 http://www.springframework.org/schema/mvc
 http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context-3.0.xsd
 http://www.springframework.org/schema/task
http://www.springframework.org/schema/task/spring-task-3.1.xsd">
    <mvc:resources mapping="/resources/**" location="/resources/"/>
    <mvc:annotation-driven/>
    <context:component-scan base-package="com.epam.preprod.ma"/>

    <bean id="locales"
          class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject">
            <ref bean="localeService"/>
        </property>
        <property name="targetMethod">
            <value>getSupportedLocales</value>
        </property>
    </bean>

    <bean id="localeResolver"
          class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="en"/>
        <property name="cookiePath" value="/MotivationAssessment"/>
        <property name="cookieMaxAge" value="18000"/>
        <property name="cookieName" value="locale"/>
    </bean>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

    <bean
            class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="WEB-INF/settings.properties"/>
    </bean>

    <bean destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialSize" value="${jdbc.initialSize}"/>
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com" />
        <property name="port" value="465" />
        <property name="username" value="kursovoy2013.kn.10.1@gmail.com" />
        <property name="password" value="passwordpwd" />

        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.socketFactory.port">465</prop>
                <prop key="mail.smtp.socketFactory.class">"javax.net.ssl.SSLSocketFactory"</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
            </props>
        </property>
    </bean>

    <bean id="velocityEngine"
          class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties">
            <value>
                resource.loader=class
                class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
            </value>
        </property>
    </bean>

    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="${viewResolver.prefix}"/>
        <property name="suffix" value="${viewResolver.suffix}"/>
    </bean>

    <task:scheduler id="scheduler" pool-size="10"/>
    <task:scheduled-tasks scheduler="scheduler">
        <task:scheduled ref="surveyService"
                        method="checkScheduledAndInProgressSurveys"
                        cron="${surveyService.updateAllSurveyStatuses.period.cron}"/>
        <task:scheduled ref="updaterInvoker" method="update"
                        cron="${updater.start.period.cron}"/>
    </task:scheduled-tasks>
</beans>
